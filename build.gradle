plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'uk.infy.luna'
version = '3.0'

application {
    mainClass = 'uk.infy.luna.Main'
}
repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'com.formdev:flatlaf:3.0'
    implementation 'com.formdev:flatlaf-intellij-themes:3.0'
}

test {
    useJUnitPlatform()
}
jar {
    manifest {
        attributes(
                'Main-Class': 'uk.infy.luna.Main'
        )
    }
    from('src/main/resources') {
        into 'uk/infy/luna'
    }
}
processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    filesMatching('**/main.png') {
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
        }
    }
}
tasks.register('jb') {
    group = 'Application'
    description = 'Clean out the entirety of build folder, Builds the app, Deletes the extra made .jar file, Then run it.'
    dependsOn 'clean'
    doLast {
        try {
            exec {
                def gradlewb = (System.getProperty('os.name').toLowerCase().contains('win')) ? 'gradlew.bat' : './gradlew'
                commandLine gradlewb, 'build'
            }
        } catch (Exception e) {
            e.printStackTrace();
            println "b u i l d haaaaaaaaaaaaaaaaaaaaaaaaaaas faaaaaaaaaaaaaaaailed (am braindeadeade when madade this)"
        }
        def libsDir = file("$buildDir/libs")
        def jarFileWithoutAll = file("$libsDir/Luna App Launcher-${version}.jar")
        if (jarFileWithoutAll.exists()) {
            jarFileWithoutAll.delete()
        }
        if (libsDir.exists() && libsDir.listFiles().size() == 1) {
            try {
                exec {
                    workingDir libsDir
                    commandLine 'java', '-jar', "Luna App Launcher-${version}-all.jar"
                }
            } catch (Exception e) {
                e.printStackTrace();
                println "FUK? APP NO LAUNCH"
            }
        }
    }
}








